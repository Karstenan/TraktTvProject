package traktTvProject.gui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JButton;

import traktTvProject.dao.TraktUserProfile;
import traktTvProject.dao.UserMoviesWatched;
import traktTvProject.jenaModelatorium.Triplelatorium;
import traktTvProject.sparqlaTorium.QueryMaker;
import main.Main;

import java.awt.event.InputMethodListener;
import java.awt.event.InputMethodEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.swing.JPanel;
import java.awt.Color;
import javax.swing.border.TitledBorder;

/**
 * 
 * Most GUI code is generated by windowbuilder.
 * Changed here and there where needed, not much has been manually changed.
 * The two buttons calls a few methods to make the program work. 
 * Beyond that not much.
 *
 */
public class TraktGui {

	private JFrame frame;
	

	/*
	 * The datafields needed to access and change the labels and textfield that gives/retrieved information.
	 */
	private JTextField user1TextField;
	private JTextField user2TextField;
	private JLabel lblUser1Score;
	private JLabel lblUser2Score;
	private JLabel lblWinnar;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					TraktGui window = new TraktGui();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public TraktGui() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 440, 559);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		user1TextField = new JTextField();
		user1TextField.addInputMethodListener(new InputMethodListener() {
			public void caretPositionChanged(InputMethodEvent arg0) {
			}
			public void inputMethodTextChanged(InputMethodEvent arg0) {
			
			}
			
		});
		user1TextField.setBounds(15, 36, 182, 26);
		frame.getContentPane().add(user1TextField);
		user1TextField.setColumns(10);
		
		user2TextField = new JTextField();
		user2TextField.setBounds(212, 36, 193, 26);
		frame.getContentPane().add(user2TextField);
		user2TextField.setColumns(10);
		
		JLabel lblUser = new JLabel("User 1");
		lblUser.setBounds(15, 7, 69, 20);
		frame.getContentPane().add(lblUser);
		
		JLabel lblUser_1 = new JLabel("User 2");
		lblUser_1.setBounds(212, 7, 69, 20);
		frame.getContentPane().add(lblUser_1);
		
	
		JButton btnNewButton = new JButton("BaconScore!!!!");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				
				/*
				 * Gets one username from each textfield and runs a sparql query on each and adds
				 * the bacon score to the jlabels with the username.
				 */
				String user1 = user1TextField.getText();
				String user2 = user2TextField.getText();
				
				int user1Score = QueryMaker.userTraktQuery(user1);
				int user2Score = QueryMaker.userTraktQuery(user2);
						
				String user1Label = user1 + " has a glorius Bacon Score of: " + user1Score;
				String user2Label = user2 + " has a glorius Bacon Score of: " + user2Score;
				
				lblUser1Score.setText(user1Label);
				lblUser2Score.setText(user2Label);
				
				/*checks which user has the best bacon score and pronounces
				 * the lucky winner in a jlabel, or both if it is a tie.
				 */
				if (user1Score == user2Score) {
					lblWinnar.setText("Seems both users are equally full of bacon");
				} else if(user1Score > user2Score){
					lblWinnar.setText(user1 + " has the most bacony score of all!");
				} else {
					lblWinnar.setText(user2 + " has the most bacony score of all!");
				}
			}
		});
		btnNewButton.setBounds(87, 229, 235, 45);
		frame.getContentPane().add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("GetTraktUserInfo");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				

				/*
				 * Takes the usernames from each textfield and makes a API call to Trakt
				 * by sending the APIkey, format and user name as parameters.
				 *  returns a TraktUserProfile object and a UserMoviesWatched list
				 */
				String user1 = user1TextField.getText();
				TraktUserProfile user1Obj = Main.getTraktUserProfile(Main.APIKey, Main.format, user1);
				List<UserMoviesWatched> user1Wlist = Main.getUserMoviesWatchedListFromTrakt(Main.APIKey, Main.format, user1);
				/*
				 * makeTriples() takes the TraktUserProfile object and UserMoviesWatched list as parameters.
				 * Will then take the relevant data to make triples.
				 */
				Triplelatorium.makeTriples(user1Obj, user1Wlist);
				
			/*
			 * Same as above but for user 2.
			 */
				String user2 = user2TextField.getText();
				TraktUserProfile user2Obj = Main.getTraktUserProfile(Main.APIKey, Main.format, user2);
				List<UserMoviesWatched> user2Wlist = Main.getUserMoviesWatchedListFromTrakt(Main.APIKey, Main.format, user2);
				Triplelatorium.makeTriples(user2Obj, user2Wlist);
					
			}
		});
		btnNewButton_1.setBounds(87, 121, 235, 50);
		frame.getContentPane().add(btnNewButton_1);
		
		JLabel lblGetsJsonStrings = new JLabel("Gets Json Strings from Trakt based on user names");
		lblGetsJsonStrings.setBounds(62, 85, 363, 20);
		frame.getContentPane().add(lblGetsJsonStrings);
		
		JLabel lblCalculatesKevinBacon = new JLabel("Kevin Bacon Score based on watched movies");
		lblCalculatesKevinBacon.setBounds(73, 193, 329, 20);
		frame.getContentPane().add(lblCalculatesKevinBacon);
		
		JPanel panel = new JPanel();
		panel.setBackground(Color.LIGHT_GRAY);
		panel.setBorder(new TitledBorder(null, "", TitledBorder.LEADING, TitledBorder.TOP, null, null));
		panel.setBounds(22, 294, 373, 164);
		frame.getContentPane().add(panel);
		panel.setLayout(null);
		
		lblUser1Score = new JLabel("");
		lblUser1Score.setBounds(10, 36, 358, 20);
		panel.add(lblUser1Score);
		
		lblUser2Score = new JLabel("");
		lblUser2Score.setBounds(10, 72, 348, 20);
		panel.add(lblUser2Score);
		
		JLabel lblKevinBaconScore = new JLabel("Kevin Bacon Score(Higher is better):");
		lblKevinBaconScore.setBounds(52, 0, 322, 20);
		panel.add(lblKevinBaconScore);
		
		 lblWinnar = new JLabel("");
		 lblWinnar.setBounds(63, 111, 295, 20);
		panel.add(lblWinnar);
		
		JMenuBar menuBar = new JMenuBar();
		frame.setJMenuBar(menuBar);
		
		JMenu mnNewMenu = new JMenu("File");
		menuBar.add(mnNewMenu);
		
		JMenuItem mntmExit = new JMenuItem("Exit");
		mntmExit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				/*
				 * Because I wanted a file menu with an exit button so there as something at the top of the window,
				 * and I don't know how to make proper exit code.
				 */
				System.exit(0);
			}
		});
		mnNewMenu.add(mntmExit);
	}
}
